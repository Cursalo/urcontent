import React, { useState } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import { Menu, X, Home, Search, MessageCircle, User, Settings, Bell, PlusCircle, TrendingUp, Heart, Bookmark, LogOut
} from 'lucide-react';
import { Link, useLocation } from 'react-router-dom';
import { Button } from '@/components/ui/button';
import { Sheet, SheetContent, SheetTrigger } from '@/components/ui/sheet';
import { Badge } from '@/components/ui/badge';
import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';
import { Separator } from '@/components/ui/separator';
import { useIsMobile } from '@/hooks/use-mobile'; interface User { id: string; name: string; username: string; avatar: string; role: 'creator' | 'business'; verified?: boolean;
} interface NavigationItem { id: string; label: string; icon: React.ReactNode; href: string; badge?: number; requiredRole?: 'creator' | 'business';
} interface MobileNavigationProps { user?: User; onLogout?: () => void; className?: string;
} const NAVIGATION_ITEMS: NavigationItem[] = [ { id: 'home', label: 'Inicio', icon: <Home className="h-5 w-5"/>, href: '/' }, { id: 'marketplace', label: 'Marketplace', icon: <Search className="h-5 w-5"/>, href: '/marketplace' }, { id: 'messages', label: 'Mensajes', icon: <MessageCircle className="h-5 w-5"/>, href: '/messages', badge: 3 }, { id: 'dashboard', label: 'Dashboard', icon: <TrendingUp className="h-5 w-5"/>, href: '/dashboard' }, { id: 'create', label: 'Crear', icon: <PlusCircle className="h-5 w-5"/>, href: '/create', requiredRole: 'creator' }, { id: 'campaigns', label: 'Campañas', icon: <TrendingUp className="h-5 w-5"/>, href: '/campaigns', requiredRole: 'business' }
]; const SECONDARY_ITEMS = [ { id: 'favorites', label: 'Favoritos', icon: <Heart className="h-5 w-5"/>, href: '/favorites' }, { id: 'saved', label: 'Guardados', icon: <Bookmark className="h-5 w-5"/>, href: '/saved' }, { id: 'notifications', label: 'Notificaciones', icon: <Bell className="h-5 w-5"/>, href: '/notifications', badge: 5 }, { id: 'settings', label: 'Configuración', icon: <Settings className="h-5 w-5"/>, href: '/settings' }
]; export const MobileNavigation: React.FC<MobileNavigationProps> = ({ user, onLogout, className = ''
}) => { const [isOpen, setIsOpen] = useState(false); const location = useLocation(); const isMobile = useIsMobile(); // Filter navigation items based on user role const filteredItems = NAVIGATION_ITEMS.filter(item => !item.requiredRole || item.requiredRole === user?.role ); const isActiveRoute = (href: string) => { if (href === '/') { return location.pathname === '/'; } return location.pathname.startsWith(href); }; const NavigationContent = () => ( <div className="flex flex-col h-full"> {/* Header */} {user && ( <div className="p-6 border-b"> <div className="flex items-center gap-3"> <Avatar className="h-12 w-12"> <AvatarImage src={user.avatar} alt={user.name} /> <AvatarFallback>{user.name.charAt(0)}</AvatarFallback> </Avatar> <div className="flex-1 min-w-0"> <div className="font-semibold text-lg">{user.name}</div> <div className="text-sm text-muted-foreground">@{user.username}</div> <Badge variant={user.role === 'creator' ? 'default' : 'secondary'} className="text-xs mt-1"> {user.role === 'creator' ? 'Creator' : 'Business'} </Badge> </div> {user.verified && ( <div className="text-gray-500">✓</div> )} </div> </div> )} {/* Main Navigation */} <nav className="flex-1 p-4"> <div className="space-y-2"> {filteredItems.map((item) => { const isActive = isActiveRoute(item.href); return ( <Link key={item.id} to={item.href} onClick={() => setIsOpen(false)} className={`flex items-center gap-3 px-3 py-3 rounded transition-all duration-200 ${ isActive ? 'bg-primary text-primary-foreground shadow-sm' : 'hover:bg-muted text-muted-foreground hover:text-foreground' }`} > {item.icon} <span className="font-medium">{item.label}</span> {item.badge && item.badge > 0 && ( <Badge variant="destructive"className="ml-auto text-xs min-w-5 h-5 flex items-center justify-center"> {item.badge > 99 ? '99+' : item.badge} </Badge> )} </Link> ); })} </div> <Separator className="my-6"/> {/* Secondary Navigation */} <div className="space-y-2"> {SECONDARY_ITEMS.map((item) => { const isActive = isActiveRoute(item.href); return ( <Link key={item.id} to={item.href} onClick={() => setIsOpen(false)} className={`flex items-center gap-3 px-3 py-3 rounded transition-all duration-200 ${ isActive ? 'bg-primary text-primary-foreground shadow-sm' : 'hover:bg-muted text-muted-foreground hover:text-foreground' }`} > {item.icon} <span className="font-medium">{item.label}</span> {item.badge && item.badge > 0 && ( <Badge variant="destructive"className="ml-auto text-xs min-w-5 h-5 flex items-center justify-center"> {item.badge > 99 ? '99+' : item.badge} </Badge> )} </Link> ); })} </div> </nav> {/* Footer */} {user && onLogout && ( <div className="p-4 border-t"> <Button variant="ghost"onClick={() => { onLogout(); setIsOpen(false); }} className="w-full justify-start text-destructive hover:text-destructive hover:bg-destructive/10"> <LogOut className="h-5 w-5 mr-3"/> Cerrar sesión </Button> </div> )} </div> ); if (!isMobile) { return null; } return ( <> {/* Mobile Menu Button */} <Sheet open={isOpen} onOpenChange={setIsOpen}> <SheetTrigger asChild> <Button variant="ghost"size="sm"className={`md:hidden ${className}`} > <Menu className="h-5 w-5"/> </Button> </SheetTrigger> <SheetContent side="left"className="w-80 p-0"> <NavigationContent /> </SheetContent> </Sheet> {/* Bottom Navigation for Mobile */} <motion.div initial={{ y: 100 }} animate={{ y: 0 }} className="fixed bottom-0 left-0 right-0 z-50 bg-background border-t md:hidden"> <div className="flex items-center justify-around py-2"> {filteredItems.slice(0, 4).map((item) => { const isActive = isActiveRoute(item.href); return ( <Link key={item.id} to={item.href} className={`flex flex-col items-center gap-1 p-3 rounded transition-all duration-200 relative ${ isActive ? 'text-primary' : 'text-muted-foreground hover:text-foreground' }`} > {item.icon} <span className="text-xs font-medium">{item.label}</span> {item.badge && item.badge > 0 && ( <Badge variant="destructive"className="absolute -top-1 -right-1 text-xs min-w-5 h-5 flex items-center justify-center"> {item.badge > 9 ? '9+' : item.badge} </Badge> )} {isActive && ( <motion.div layoutId="mobile-nav-indicator"className="absolute -top-px left-1/2 transform -translate-x-1/2 w-8 h-0.5 bg-primary rounded-full"/> )} </Link> ); })} {/* More button */} <Button variant="ghost"size="sm"onClick={() => setIsOpen(true)} className="flex flex-col items-center gap-1 p-3 text-muted-foreground hover:text-foreground"> <Menu className="h-5 w-5"/> <span className="text-xs font-medium">Más</span> </Button> </div> </motion.div> {/* Bottom padding to avoid content being hidden behind bottom nav */} <div className="h-20 md:hidden"/> </> );
}; export default MobileNavigation;