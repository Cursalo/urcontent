import React, { useState } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Badge } from '@/components/ui/badge';
import { Palette, Type, Image, Download, Upload, Copy, Check, Plus, Edit2, Trash2, Eye, FileText, Link
} from 'lucide-react';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { toast } from 'sonner'; interface Color { nombre: string; hex: string; uso: string;
} interface Fuente { nombre: string; familia: string; peso: string; uso: string;
} interface Logo { id: string; nombre: string; url: string; tipo: 'principal' | 'alternativo' | 'icono';
} interface MiBrandKitProps { colores: Color[]; fuentes: Fuente[]; logos: Logo[]; biografia: string; enlaces: { plataforma: string; url: string }[];
} export const MiBrandKit: React.FC<MiBrandKitProps> = ({ colores: coloresIniciales, fuentes: fuentesIniciales, logos: logosIniciales, biografia: biografiaInicial, enlaces: enlacesIniciales
}) => { const [colores] = useState(coloresIniciales); const [fuentes] = useState(fuentesIniciales); const [logos] = useState(logosIniciales); const [biografia] = useState(biografiaInicial); const [enlaces] = useState(enlacesIniciales); const [colorCopiado, setColorCopiado] = useState<string | null>(null); const copiarColor = (hex: string) => { navigator.clipboard.writeText(hex); setColorCopiado(hex); toast.success(`Color ${hex} copiado al portapapeles`); setTimeout(() => setColorCopiado(null), 2000); }; const copiarTexto = (texto: string, mensaje: string) => { navigator.clipboard.writeText(texto); toast.success(mensaje); }; const descargarBrandKit = () => { // Aquí iría la lógica para generar y descargar el PDF toast.success('Descargando Brand Kit...'); }; return ( <div className="space-y-6"> <div className="flex items-center justify-between"> <div> <h2 className="text-2xl font-semibold text-gray-900">Mi Brand Kit</h2> <p className="text-gray-500 mt-1">Todos tus elementos de marca en un solo lugar</p> </div> <Button onClick={descargarBrandKit} className="rounded-full"> <Download className="w-4 h-4 mr-2"/> Descargar PDF </Button> </div> <Tabs defaultValue="colores"className="w-full"> <TabsList className="grid w-full grid-cols-5"> <TabsTrigger value="colores">Colores</TabsTrigger> <TabsTrigger value="tipografia">Tipografía</TabsTrigger> <TabsTrigger value="logos">Logos</TabsTrigger> <TabsTrigger value="biografia">Biografía</TabsTrigger> <TabsTrigger value="enlaces">Enlaces</TabsTrigger> </TabsList> <TabsContent value="colores"className="space-y-6 mt-6"> <Card> <CardHeader> <div className="flex items-center justify-between"> <CardTitle>Paleta de Colores</CardTitle> <Button variant="outline"size="sm"className="rounded-full"> <Plus className="w-4 h-4 mr-2"/> Agregar Color </Button> </div> </CardHeader> <CardContent> <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6"> {colores.map((color, index) => ( <div key={index} className="group relative"> <div className="aspect-square rounded shadow-lg transition-all duration-300 hover:scale-105 cursor-pointer relative overflow-hidden"style={{ backgroundColor: color.hex }} onClick={() => copiarColor(color.hex)} > <div className="absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-10 transition-all duration-300 flex items-center justify-center"> {colorCopiado === color.hex ? ( <Check className="w-8 h-8 text-white opacity-0 group-hover:opacity-100 transition-opacity"/> ) : ( <Copy className="w-8 h-8 text-white opacity-0 group-hover:opacity-100 transition-opacity"/> )} </div> </div> <div className="mt-4"> <h4 className="font-semibold text-gray-900">{color.nombre}</h4> <p className="text-sm text-gray-500 mt-1">{color.hex}</p> <p className="text-xs text-gray-400 mt-1">{color.uso}</p> </div> <div className="absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition-opacity"> <Button variant="ghost"size="icon"className="h-8 w-8 bg-white rounded-full shadow-md"> <Edit2 className="w-4 h-4"/> </Button> </div> </div> ))} </div> </CardContent> </Card> </TabsContent> <TabsContent value="tipografia"className="space-y-6 mt-6"> <Card> <CardHeader> <div className="flex items-center justify-between"> <CardTitle>Fuentes</CardTitle> <Button variant="outline"size="sm"className="rounded-full"> <Plus className="w-4 h-4 mr-2"/> Agregar Fuente </Button> </div> </CardHeader> <CardContent> <div className="space-y-6"> {fuentes.map((fuente, index) => ( <div key={index} className="border rounded p-6 hover:border-gray-300 transition-colors"> <div className="flex items-start justify-between mb-4"> <div> <h4 className="text-lg font-semibold text-gray-900">{fuente.nombre}</h4> <p className="text-sm text-gray-500">{fuente.familia} - {fuente.peso}</p> <p className="text-xs text-gray-400 mt-1">{fuente.uso}</p> </div> <div className="flex gap-2"> <Button variant="ghost"size="icon"> <Edit2 className="w-4 h-4"/> </Button> <Button variant="ghost"size="icon"> <Trash2 className="w-4 h-4"/> </Button> </div> </div> <div className="p-4 bg-gray-50 rounded"style={{ fontFamily: fuente.familia, fontWeight: fuente.peso }} > <p className="text-2xl mb-2">Aa Bb Cc Dd Ee Ff Gg Hh Ii Jj Kk Ll Mm Nn Oo Pp Qq Rr Ss Tt Uu Vv Ww Xx Yy Zz</p> <p className="text-lg">1234567890</p> <p className="text-base mt-2">El contenido de calidad es la clave del éxito en redes sociales.</p> </div> </div> ))} </div> </CardContent> </Card> </TabsContent> <TabsContent value="logos"className="space-y-6 mt-6"> <Card> <CardHeader> <div className="flex items-center justify-between"> <CardTitle>Logos y Marcas</CardTitle> <Button variant="outline"size="sm"className="rounded-full"> <Upload className="w-4 h-4 mr-2"/> Subir Logo </Button> </div> </CardHeader> <CardContent> <div className="grid grid-cols-1 md:grid-cols-3 gap-6"> {logos.map((logo) => ( <div key={logo.id} className="group"> <div className="aspect-square bg-gray-50 rounded p-8 flex items-center justify-center relative overflow-hidden"> <img src={logo.url} alt={logo.nombre} className="max-w-full max-h-full object-contain"/> <div className="absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-50 transition-all duration-300 flex items-center justify-center opacity-0 group-hover:opacity-100"> <div className="flex gap-2"> <Button size="sm"variant="secondary"className="rounded-full"> <Eye className="w-4 h-4 mr-1"/> Ver </Button> <Button size="sm"variant="secondary"className="rounded-full"> <Download className="w-4 h-4 mr-1"/> Descargar </Button> </div> </div> </div> <div className="mt-3"> <h4 className="font-medium text-gray-900">{logo.nombre}</h4> <Badge variant="secondary"className="mt-1"> {logo.tipo} </Badge> </div> </div> ))} </div> </CardContent> </Card> </TabsContent> <TabsContent value="biografia"className="space-y-6 mt-6"> <Card> <CardHeader> <CardTitle>Biografía Profesional</CardTitle> </CardHeader> <CardContent> <div className="space-y-4"> <div className="relative"> <textarea value={biografia} readOnly className="w-full min-h-[200px] p-4 border rounded bg-gray-50 resize-none"/> <div className="absolute top-2 right-2"> <Button variant="ghost"size="icon"onClick={() => copiarTexto(biografia, 'Biografía copiada al portapapeles')} > <Copy className="w-4 h-4"/> </Button> </div> </div> <div className="flex items-center justify-between text-sm text-gray-500"> <span>{biografia.length} caracteres</span> <Button variant="outline"size="sm"> <Edit2 className="w-4 h-4 mr-2"/> Editar Biografía </Button> </div> </div> {/* Versiones para diferentes plataformas */} <div className="mt-8"> <h4 className="font-semibold text-gray-900 mb-4">Versiones por Plataforma</h4> <div className="space-y-3"> <div className="p-4 border rounded"> <div className="flex items-center justify-between mb-2"> <div className="flex items-center gap-2"> <Instagram className="w-4 h-4"/> <span className="font-medium">Instagram (150 caracteres)</span> </div> <Button variant="ghost"size="sm"onClick={() => copiarTexto(biografia.substring(0, 150), 'Bio de Instagram copiada')} > <Copy className="w-3 h-3"/> </Button> </div> <p className="text-sm text-gray-600">{biografia.substring(0, 150)}...</p> </div> <div className="p-4 border rounded"> <div className="flex items-center justify-between mb-2"> <div className="flex items-center gap-2"> <Video className="w-4 h-4"/> <span className="font-medium">TikTok (80 caracteres)</span> </div> <Button variant="ghost"size="sm"onClick={() => copiarTexto(biografia.substring(0, 80), 'Bio de TikTok copiada')} > <Copy className="w-3 h-3"/> </Button> </div> <p className="text-sm text-gray-600">{biografia.substring(0, 80)}...</p> </div> </div> </div> </CardContent> </Card> </TabsContent> <TabsContent value="enlaces"className="space-y-6 mt-6"> <Card> <CardHeader> <div className="flex items-center justify-between"> <CardTitle>Enlaces y Redes Sociales</CardTitle> <Button variant="outline"size="sm"className="rounded-full"> <Plus className="w-4 h-4 mr-2"/> Agregar Enlace </Button> </div> </CardHeader> <CardContent> <div className="space-y-3"> {enlaces.map((enlace, index) => ( <div key={index} className="flex items-center gap-4 p-4 border rounded hover:border-gray-300 transition-colors"> <div className="w-10 h-10 bg-gray-100 rounded flex items-center justify-center"> <Link className="w-5 h-5 text-gray-600"/> </div> <div className="flex-1"> <h4 className="font-medium text-gray-900">{enlace.plataforma}</h4> <p className="text-sm text-gray-500">{enlace.url}</p> </div> <div className="flex gap-2"> <Button variant="ghost"size="icon"onClick={() => copiarTexto(enlace.url, 'Enlace copiado al portapapeles')} > <Copy className="w-4 h-4"/> </Button> <Button variant="ghost"size="icon"> <Edit2 className="w-4 h-4"/> </Button> <Button variant="ghost"size="icon"> <Trash2 className="w-4 h-4"/> </Button> </div> </div> ))} </div> </CardContent> </Card> </TabsContent> </Tabs> </div> );
};