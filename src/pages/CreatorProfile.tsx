import { useState, useEffect } from"react";
import { useParams, Link } from"react-router-dom";
import { Button } from"@/components/ui/button";
import { ContactCreatorModal } from"@/components/modals/ContactCreatorModal";
import { creatorService, Creator } from"@/services";
import { Card } from"@/components/ui/card";
import { Badge } from"@/components/ui/badge";
import { Avatar, AvatarFallback, AvatarImage } from"@/components/ui/avatar";
import { Tabs, TabsContent, TabsList, TabsTrigger } from"@/components/ui/tabs";
import { Progress } from"@/components/ui/progress";
import { MapPin, Users, TrendingUp, Star, Instagram, Youtube, MessageCircle, Heart, Share2, ArrowLeft, Verified, Calendar, Award, Eye, ThumbsUp, PlayCircle, Camera, BarChart3, Globe, Loader2
} from"lucide-react";
import { Navbar } from"@/components/layout/Navbar";
import { Footer } from"@/components/layout/Footer"; const CreatorProfile = () => { const { id } = useParams(); const [activeTab, setActiveTab] = useState("portfolio"); const [likedPosts, setLikedPosts] = useState<string[]>([]); const [showContactModal, setShowContactModal] = useState(false); const [creator, setCreator] = useState<Creator | null>(null); const [loading, setLoading] = useState(true); const [error, setError] = useState<string | null>(null); // Fetch creator data based on ID useEffect(() => { const fetchCreator = async () => { if (!id) return; try { setLoading(true); setError(null); const data = await creatorService.getCreator(id); if (data) { setCreator(data); } else { setError('Creador no encontrado'); } } catch (err) { console.error('Error fetching creator:', err); setError('Error al cargar el perfil del creador'); } finally { setLoading(false); } }; fetchCreator(); }, [id]); const toggleLike = (postId: string) => { setLikedPosts(prev => prev.includes(postId) ? prev.filter(id => id !== postId) : [...prev, postId] ); }; // Loading state if (loading) { return ( <div className="min-h-screen bg-white"> <Navbar /> <div className="pt-16 flex justify-center items-center min-h-[60vh]"> <div className="text-center"> <Loader2 className="w-8 h-8 animate-spin mx-auto mb-4 text-gray-400"/> <p className="text-gray-600">Cargando perfil...</p> </div> </div> <Footer /> </div> ); } // Error state if (error || !creator) { return ( <div className="min-h-screen bg-white"> <Navbar /> <div className="pt-16 flex justify-center items-center min-h-[60vh]"> <div className="text-center"> <p className="text-gray-700 mb-4">{error || 'Creador no encontrado'}</p> <Link to="/marketplace"> <Button variant="outline"className="rounded-full"> Volver al Marketplace </Button> </Link> </div> </div> <Footer /> </div> ); } const totalFollowers = (creator.instagram_followers || 0) + (creator.youtube_followers || 0) + (creator.tiktok_followers || 0); return ( <div className="min-h-screen bg-white"> <Navbar /> <div className="pt-16"> {/* Back Button */} <div className="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 py-4"> <Link to="/marketplace"className="inline-flex items-center text-gray-600 hover:text-black transition-colors"> <ArrowLeft className="w-4 h-4 mr-2"/> Volver al Marketplace </Link> </div> {/* Cover Image */} <div className="relative h-80 bg-gray-900"> <img src={creator.cover_image || 'https://images.unsplash.com/photo-1513475382585-d06e58bcb0e0?w=1200&h=400&fit=crop'} alt="Cover"className="w-full h-full object-cover"/> <div className="absolute inset-0 bg-black/20"/> </div> {/* Profile Header */} <div className="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8"> <div className="relative -mt-20 pb-8"> <div className="flex flex-col md:flex-row items-start md:items-end space-y-4 md:space-y-0 md:space-x-8"> {/* Avatar */} <Avatar className="w-40 h-40 border-4 border-white shadow-2xl"> <AvatarImage src={creator.user.avatar_url || undefined} alt={creator.user.full_name} /> <AvatarFallback className="text-4xl">{creator.user.full_name?.split(' ').map(n => n[0]).join('') || 'UN'}</AvatarFallback> </Avatar> {/* Basic Info */} <div className="flex-1 bg-white rounded p-8 shadow-xl border border-gray-100"> <div className="flex flex-col md:flex-row justify-between items-start md:items-center mb-6"> <div> <div className="flex items-center space-x-3 mb-2"> <h1 className="text-3xl font-light text-black">{creator.user.full_name}</h1> {creator.is_verified && <Verified className="w-6 h-6 text-gray-700"/>} </div> <p className="text-xl text-gray-500 mb-2">@{creator.username}</p> <div className="flex items-center space-x-4 text-gray-500"> <div className="flex items-center space-x-1"> <MapPin className="w-4 h-4"/> <span>{creator.location || 'Argentina'}</span> </div> <div className="flex items-center space-x-1"> <Calendar className="w-4 h-4"/> <span>Activo desde {new Date(creator.created_at).getFullYear()}</span> </div> </div> </div> <div className="flex space-x-3 mt-4 md:mt-0"> <Button size="lg"className="bg-black hover:bg-gray-800 text-white px-8 py-3 rounded-full"onClick={() => setShowContactModal(true)} > <MessageCircle className="w-5 h-5 mr-2"/> Contactar </Button> <Button size="lg"variant="outline"className="rounded-full px-4"> <Heart className="w-5 h-5"/> </Button> <Button size="lg"variant="outline"className="rounded-full px-4"> <Share2 className="w-5 h-5"/> </Button> </div> </div> {/* Stats */} <div className="grid grid-cols-2 md:grid-cols-4 gap-6 mb-6"> <div className="text-center"> <div className="text-2xl font-light text-black mb-1">{(totalFollowers / 1000).toFixed(0)}K</div> <div className="text-gray-500 text-sm">Seguidores</div> </div> <div className="text-center"> <div className="text-2xl font-light text-black mb-1">{creator.engagement_rate || 0}%</div> <div className="text-gray-500 text-sm">Engagement</div> </div> <div className="text-center"> <div className="text-2xl font-light text-black mb-1">{creator.ur_score || 0}</div> <div className="text-gray-500 text-sm">URScore</div> </div> <div className="text-center"> <div className="text-2xl font-light text-black mb-1">{creator.total_collaborations || 0}</div> <div className="text-gray-500 text-sm">Colaboraciones</div> </div> </div> {/* Specialties */} <div className="flex flex-wrap gap-2"> {creator.specialties && creator.specialties.length > 0 ? ( creator.specialties.map((specialty) => ( <Badge key={specialty} variant="secondary"className="rounded-full px-3 py-1"> {specialty} </Badge> )) ) : ( <Badge variant="secondary"className="rounded-full px-3 py-1"> {creator.category} </Badge> )} </div> </div> </div> </div> {/* Content Tabs */} <Tabs value={activeTab} onValueChange={setActiveTab} className="w-full"> <TabsList className="grid w-full grid-cols-4 bg-gray-100 rounded p-1 mb-8"> <TabsTrigger value="portfolio"className="rounded data-[state=active]:bg-black data-[state=active]:text-white"> Portfolio </TabsTrigger> <TabsTrigger value="about"className="rounded data-[state=active]:bg-black data-[state=active]:text-white"> Sobre Mí </TabsTrigger> <TabsTrigger value="stats"className="rounded data-[state=active]:bg-black data-[state=active]:text-white"> Estadísticas </TabsTrigger> <TabsTrigger value="reviews"className="rounded data-[state=active]:bg-black data-[state=active]:text-white"> Reviews </TabsTrigger> </TabsList> {/* Portfolio Tab */} <TabsContent value="portfolio"className="mt-0"> <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8"> {creator.portfolio && creator.portfolio.length > 0 ? ( creator.portfolio.map((item) => ( <Card key={item.id} className="group bg-white border border-gray-100 rounded overflow-hidden hover:border-gray-200 hover:shadow-xl hover:shadow-black/5 transition-all duration-300"> <div className="relative aspect-square overflow-hidden"> <img src={item.media_url || 'https://images.unsplash.com/photo-1515886657613-9f3515b0c78f?w=600&h=600&fit=crop'} alt={item.title || 'Portfolio item'} className="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"/> <div className="absolute inset-0 bg-black/0 group-hover:bg-black/20 transition-colors duration-300"/> {/* Platform & Type Indicator */} <div className="absolute top-3 left-3 flex space-x-2"> <div className="bg-white/90 backdrop-blur-sm rounded-full px-2 py-1 text-xs font-medium"> {item.platform === 'instagram' && <Instagram className="w-3 h-3 inline mr-1"/>} {item.platform === 'youtube' && <Youtube className="w-3 h-3 inline mr-1"/>} {item.platform || 'instagram'} </div> {item.media_type === 'video' && ( <div className="bg-white/90 backdrop-blur-sm rounded-full p-1"> <PlayCircle className="w-3 h-3"/> </div> )} </div> {/* Like Button */} <button onClick={() => toggleLike(item.id)} className="absolute top-3 right-3 bg-white/90 backdrop-blur-sm rounded-full p-2 hover:bg-white transition-colors"> <Heart className={`w-4 h-4 ${likedPosts.includes(item.id) ? 'text-gray-500 fill-current' : 'text-gray-600'}`} /> </button> </div> <div className="p-6"> <div className="flex items-start justify-between mb-3"> <div className="flex-1"> <h3 className="font-semibold text-black mb-1">{item.title || 'Portfolio Item'}</h3> <p className="text-gray-600 text-sm line-clamp-2">{item.description || 'Content creation showcase'}</p> </div> </div> <div className="flex items-center justify-between mb-4"> <div className="text-sm font-medium text-black">{item.client_name || 'Personal Project'}</div> <div className="text-xs text-gray-500">{new Date(item.created_at).toLocaleDateString()}</div> </div> {/* Engagement Stats */} <div className="grid grid-cols-3 gap-4 text-center text-sm"> <div> <div className="font-semibold text-black">{((item.views || 0) / 1000).toFixed(0)}K</div> <div className="text-gray-500 text-xs">Views</div> </div> <div> <div className="font-semibold text-black">{((item.likes || 0) / 1000).toFixed(1)}K</div> <div className="text-gray-500 text-xs">Likes</div> </div> <div> <div className="font-semibold text-black">{item.comments || 0}</div> <div className="text-gray-500 text-xs">Comments</div> </div> </div> </div> </Card> )) ) : ( <div className="col-span-full text-center py-12"> <p className="text-gray-600">No hay elementos en el portfolio disponibles.</p> </div> )} </div> </TabsContent> {/* About Tab */} <TabsContent value="about"className="mt-0"> <div className="grid grid-cols-1 lg:grid-cols-2 gap-8"> <Card className="bg-white border border-gray-100 rounded p-8"> <h3 className="text-2xl font-light text-black mb-6">Sobre Mí</h3> <p className="text-gray-600 leading-relaxed mb-6"> {creator.bio || 'Content creator profesional especializado en crear contenido auténtico y de calidad para marcas.'} </p> <div className="space-y-4"> <div> <div className="text-sm font-medium text-gray-700 mb-2">Tarifa por Colaboración</div> <div className="text-2xl font-light text-black"> ${creator.min_price || 0} - ${creator.max_price || 0} </div> </div> <div> <div className="text-sm font-medium text-gray-700 mb-2">Idiomas</div> <div className="flex space-x-2"> {creator.languages && creator.languages.length > 0 ? ( creator.languages.map((lang) => ( <Badge key={lang} variant="outline"className="rounded-full"> {lang} </Badge> )) ) : ( <Badge variant="outline"className="rounded-full"> Español </Badge> )} </div> </div> </div> </Card> <Card className="bg-white border border-gray-100 rounded p-8"> <h3 className="text-2xl font-light text-black mb-6">Plataformas</h3> <div className="space-y-6"> {/* Instagram */} {creator.instagram_followers && creator.instagram_followers > 0 && ( <div className="flex items-center justify-between p-4 bg-gray-50 rounded"> <div className="flex items-center space-x-4"> <div className="w-12 h-12 bg-white rounded flex items-center justify-center"> <Instagram className="w-6 h-6 text-gray-700"/> </div> <div> <div className="flex items-center space-x-2"> <div className="font-semibold text-black">Instagram</div> {creator.is_verified && <Verified className="w-4 h-4 text-gray-700"/>} </div> <div className="text-gray-500 text-sm">@{creator.username}</div> </div> </div> <div className="text-right"> <div className="font-semibold text-black">{(creator.instagram_followers / 1000).toFixed(0)}K</div> <div className="text-gray-500 text-xs">seguidores</div> </div> </div> )} {/* YouTube */} {creator.youtube_followers && creator.youtube_followers > 0 && ( <div className="flex items-center justify-between p-4 bg-gray-50 rounded"> <div className="flex items-center space-x-4"> <div className="w-12 h-12 bg-white rounded flex items-center justify-center"> <Youtube className="w-6 h-6 text-gray-700"/> </div> <div> <div className="flex items-center space-x-2"> <div className="font-semibold text-black">YouTube</div> </div> <div className="text-gray-500 text-sm">{creator.user.full_name}</div> </div> </div> <div className="text-right"> <div className="font-semibold text-black">{(creator.youtube_followers / 1000).toFixed(0)}K</div> <div className="text-gray-500 text-xs">seguidores</div> </div> </div> )} {/* TikTok */} {creator.tiktok_followers && creator.tiktok_followers > 0 && ( <div className="flex items-center justify-between p-4 bg-gray-50 rounded"> <div className="flex items-center space-x-4"> <div className="w-12 h-12 bg-white rounded flex items-center justify-center"> <div className="w-6 h-6 bg-black rounded-full"/> </div> <div> <div className="flex items-center space-x-2"> <div className="font-semibold text-black">TikTok</div> </div> <div className="text-gray-500 text-sm">@{creator.username}</div> </div> </div> <div className="text-right"> <div className="font-semibold text-black">{(creator.tiktok_followers / 1000).toFixed(0)}K</div> <div className="text-gray-500 text-xs">seguidores</div> </div> </div> )} </div> </Card> </div> </TabsContent> {/* Stats Tab */} <TabsContent value="stats"className="mt-0"> <div className="grid grid-cols-1 md:grid-cols-2 gap-8"> <Card className="bg-white border border-gray-100 rounded p-8"> <h3 className="text-2xl font-light text-black mb-6">Performance Overview</h3> <div className="space-y-6"> <div> <div className="flex items-center justify-between mb-2"> <span className="text-sm font-medium text-gray-700">URScore</span> <span className="text-sm font-semibold text-black">{creator.ur_score || 0}/100</span> </div> <Progress value={creator.ur_score || 0} className="h-3 rounded-full"/> </div> <div> <div className="flex items-center justify-between mb-2"> <span className="text-sm font-medium text-gray-700">Engagement Rate</span> <span className="text-sm font-semibold text-black">{creator.engagement_rate || 0}%</span> </div> <Progress value={(creator.engagement_rate || 0) * 10} className="h-3 rounded-full"/> </div> <div> <div className="flex items-center justify-between mb-2"> <span className="text-sm font-medium text-gray-700">Rating Promedio</span> <span className="text-sm font-semibold text-black">{((creator.average_rating || 0) * 20).toFixed(0)}%</span> </div> <Progress value={(creator.average_rating || 0) * 20} className="h-3 rounded-full"/> </div> </div> </Card> <Card className="bg-white border border-gray-100 rounded p-8"> <h3 className="text-2xl font-light text-black mb-6">Estadísticas Clave</h3> <div className="grid grid-cols-2 gap-6"> <div className="text-center"> <div className="w-16 h-16 bg-gray-100 rounded flex items-center justify-center mx-auto mb-3"> <Eye className="w-8 h-8 text-gray-600"/> </div> <div className="text-2xl font-light text-black mb-1"> {(totalFollowers / 1000000).toFixed(1)}M </div> <div className="text-gray-500 text-sm">Total Reach</div> </div> <div className="text-center"> <div className="w-16 h-16 bg-gray-100 rounded flex items-center justify-center mx-auto mb-3"> <BarChart3 className="w-8 h-8 text-gray-600"/> </div> <div className="text-2xl font-light text-black mb-1">{creator.engagement_rate || 0}%</div> <div className="text-gray-500 text-sm">Avg Engagement</div> </div> <div className="text-center"> <div className="w-16 h-16 bg-gray-100 rounded flex items-center justify-center mx-auto mb-3"> <Users className="w-8 h-8 text-gray-600"/> </div> <div className="text-2xl font-light text-black mb-1">{creator.total_collaborations || 0}</div> <div className="text-gray-500 text-sm">Colaboraciones</div> </div> <div className="text-center"> <div className="w-16 h-16 bg-gray-100 rounded flex items-center justify-center mx-auto mb-3"> <ThumbsUp className="w-8 h-8 text-gray-600"/> </div> <div className="text-2xl font-light text-black mb-1">{((creator.average_rating || 0) * 20).toFixed(0)}%</div> <div className="text-gray-500 text-sm">Satisfacción</div> </div> </div> </Card> </div> </TabsContent> {/* Reviews Tab */} <TabsContent value="reviews"className="mt-0"> <div className="space-y-6"> {/* TODO: Implement reviews from collaborations table */} <Card className="bg-white border border-gray-100 rounded p-8"> <div className="text-center py-12"> <p className="text-gray-600 mb-4">Las reseñas estarán disponibles próximamente.</p> <p className="text-sm text-gray-500">Los comentarios y ratings de colaboraciones pasadas se mostrarán aquí.</p> </div> </Card> </div> </TabsContent> </Tabs> </div> </div> <Footer /> {/* Contact Modal */} <ContactCreatorModal isOpen={showContactModal} onClose={() => setShowContactModal(false)} creator={{ id: creator.id, name: creator.user.full_name || '', username: creator.username, avatar: creator.user.avatar_url || '', specialties: creator.specialties || [creator.category], rate: { min: creator.min_price || 0, max: creator.max_price || 0 }, urScore: creator.ur_score || 0 }} /> </div> );
}; export default CreatorProfile;